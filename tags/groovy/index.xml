<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>groovy on Trisha Gee</title>
    <link>https://trishagee.github.io/tags/groovy/</link>
    <description>Recent content in groovy on Trisha Gee</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 06 Apr 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://trishagee.github.io/tags/groovy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Groovy vs Java</title>
      <link>https://trishagee.github.io/presentation/groovy_vs_java/</link>
      <pubDate>Mon, 06 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/presentation/groovy_vs_java/</guid>
      <description>&lt;p&gt;Resources for my &amp;ldquo;Is Groovy Better Than Java for Testing?&amp;rdquo; talk.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Workshop: AngularJS, HTML5, Groovy, Java and MongoDB</title>
      <link>https://trishagee.github.io/resources/angular_java_groovy_mongodb_workshop/</link>
      <pubDate>Mon, 19 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/resources/angular_java_groovy_mongodb_workshop/</guid>
      <description>&lt;p&gt;Setup required for the &lt;a href=&#34;http://qconlondon.com/tutorial/html5-angularjs-groovy-java-and-mongodb-all-together&#34;&gt;AngularJS/HTML5/Groovy/Java/MongoDB tutorial&lt;/a&gt; for QCon London 2015.
Sign up with code SPEAKGEE100 for Â£100 off the price!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using Groovy to import XML into MongoDB</title>
      <link>https://trishagee.github.io/post/groovy_import_to_mongodb/</link>
      <pubDate>Tue, 07 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/groovy_import_to_mongodb/</guid>
      <description>This year I&amp;rsquo;ve been demonstrating how easy it is to create modern web apps using AngularJS, Java and MongoDB. I also use Groovy during this demo to do the sorts of things Groovy is really good at - writing descriptive tests, and creating scripts.
Due to the time pressures in the demo, I never really get a chance to go into the details of the script I use, so the aim of this long-overdue blog post is to go over this Groovy script in a bit more detail.</description>
    </item>
    
    <item>
      <title>Readable, Succinct, or Just Plain Short?</title>
      <link>https://trishagee.github.io/post/short_vs_readable.md/</link>
      <pubDate>Wed, 02 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/short_vs_readable.md/</guid>
      <description>&lt;p&gt;Which is more readable?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;releaseVersion = version.substring(0, version.indexOf(&#39;-SNAPSHOT&#39;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;releaseVersion = version[0..-10]
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Converting Blogger to Markdown</title>
      <link>https://trishagee.github.io/post/atom-to-hugo/</link>
      <pubDate>Thu, 20 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/atom-to-hugo/</guid>
      <description>I&amp;rsquo;ve been using Blogger happily for three years or so, since I migrated the blog from LiveJournal and decided to actually invest some time writing. I&amp;rsquo;m happy with it because I just type stuff into Blogger and It Just Works. I&amp;rsquo;m happy because I can use my Google credentials to sign in. I&amp;rsquo;m happy because now I can pretend my two Google+ accounts exist for a purpose, by getting Blogger to automatically share my content there.</description>
    </item>
    
    <item>
      <title>Spock: Data Driven Testing</title>
      <link>https://trishagee.github.io/post/spock_data_driven_testing/</link>
      <pubDate>Fri, 20 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/spock_data_driven_testing/</guid>
      <description>In the last two articles on Spock I&amp;rsquo;ve covered mocking and stubbing. And I was pretty sold on Spock just based on that. But for a database driver, there&amp;rsquo;s a killer feature: Data Driven Testing.
All developers have a tendency to think of and test the happy path. Not least of all because that&amp;rsquo;s usually the path in the User Story - &amp;ldquo;As a customer I want to withdraw money and have the correct amount in my hand&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Spock passes the next test - Painless Stubbing</title>
      <link>https://trishagee.github.io/post/spock_passes_the_next_test__painless_stubbing/</link>
      <pubDate>Wed, 10 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/spock_passes_the_next_test__painless_stubbing/</guid>
      <description>In the last post I talked about our need for some improved testing tools, our choice of Spock as something to spike, and how mocking looks in Spock.
As that blog got rather long, I saved the next installment for a separate post.
Today I want to look at stubbing.
Stubbing
Mocking is great for checking outputs - in the example in the last post, we&amp;rsquo;re checking that the process of encoding an array calls the right things on the way out, if you like - that the right stuff gets poked onto the bsonWriter.</description>
    </item>
    
    <item>
      <title>Spock is awesome! Seriously Simplified Mocking</title>
      <link>https://trishagee.github.io/post/spock_is_awesome_seriously_simplified_mocking/</link>
      <pubDate>Tue, 09 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/spock_is_awesome_seriously_simplified_mocking/</guid>
      <description>We&amp;rsquo;re constantly fighting a battle when developing the new MongoDB Java driver between using tools that will do heavy lifting for us and minimising the dependencies a user has to download in order to use our driver. Ideally, we want the number of dependencies to be zero.
This is not going to be the case when it comes to testing, however. At the very least, we&amp;rsquo;re going to use JUnit or TestNG (we used testng in the previous version, we&amp;rsquo;ve switched to JUnit for 3.</description>
    </item>
    
  </channel>
</rss>
