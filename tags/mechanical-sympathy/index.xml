<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mechanical sympathy on Trisha Gee</title>
    <link>https://trishagee.github.io/tags/mechanical-sympathy/</link>
    <description>Recent content in mechanical sympathy on Trisha Gee</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Fri, 12 Apr 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://trishagee.github.io/tags/mechanical-sympathy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How Mechanical Sympathy got me to the airport on time</title>
      <link>https://trishagee.github.io/post/how_mechanical_sympathy_got_me_to_the_airport_on_time/</link>
      <pubDate>Fri, 12 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/how_mechanical_sympathy_got_me_to_the_airport_on_time/</guid>
      <description>&lt;p&gt;Lets talk about mechanical sympathy. Martin Thompson has been making this term very popular in software development, so it&amp;rsquo;s best to read &lt;a href=&#34;http://mechanical-sympathy.blogspot.co.uk/2011/07/why-mechanical-sympathy.html&#34;&gt;his description of why he used the term&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dissecting the Disruptor: Demystifying Memory Barriers</title>
      <link>https://trishagee.github.io/post/dissecting_the_disruptor_demystifying_memory_barriers/</link>
      <pubDate>Sun, 07 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/dissecting_the_disruptor_demystifying_memory_barriers/</guid>
      <description>&lt;p&gt;My recent slow-down in posting is because I&amp;rsquo;ve been trying to write a post explaining &lt;a href=&#34;http://en.wikipedia.org/wiki/Memory_barrier&#34;&gt;memory barriers&lt;/a&gt; and their applicability in &lt;a href=&#34;http://code.google.com/p/disruptor&#34;&gt;the Disruptor&lt;/a&gt;.  The problem is, no matter how much I read and no matter how many times I ask the ever-patient &lt;a href=&#34;http://mechanical-sympathy.blogspot.com/&#34;&gt;Martin&lt;/a&gt; and &lt;a href=&#34;http://mikes-tech.blogspot.com/&#34;&gt;Mike&lt;/a&gt; questions trying to clarify some point, I just don&amp;rsquo;t intuitively grasp the subject.  I guess I don&amp;rsquo;t have the deep background knowledge required to fully understand.&lt;/p&gt;
&lt;p&gt;So, rather than make an idiot of myself trying to explain something I don&amp;rsquo;t really get, I&amp;rsquo;m going to try and cover, at an abstract / massive-simplification level, what I do understand in the area.  Martin has written a post &lt;a href=&#34;http://mechanical-sympathy.blogspot.com/2011/07/memory-barriersfences.html&#34;&gt;going into memory barriers&lt;/a&gt; in some detail, so hopefully I can get away with skimming the subject.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dissecting the Disruptor: Why it&#39;s so fast (part two) - Magic cache line padding</title>
      <link>https://trishagee.github.io/post/dissecting_the_disruptor_why_its_so_fast_part_two__magic_cache_line_padding/</link>
      <pubDate>Fri, 22 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/dissecting_the_disruptor_why_its_so_fast_part_two__magic_cache_line_padding/</guid>
      <description>&lt;p&gt;We mention the phrase Mechanical Sympathy quite a lot, in fact it&amp;rsquo;s even &lt;a href=&#34;http://mechanical-sympathy.blogspot.com/&#34;&gt;Martin&amp;rsquo;s blog title&lt;/a&gt;.  It&amp;rsquo;s about understanding how the underlying hardware operates and programming in a way that works with that, not against it.&lt;/p&gt;
&lt;p&gt;We get a number of comments and questions about the mysterious cache line padding in the &lt;a href=&#34;https://github.com/LMAX-Exchange/disruptorsource/browse/trunk/code/src/main/com/lmax/disruptor/RingBuffer.java&#34;&gt;RingBuffer&lt;/a&gt;, and I referred to it in the &lt;a href=&#34;https://trishagee.com/2011/07/16/dissecting_the_disruptor_why_its_so_fast_part_one__locks_are_bad/&#34;&gt;last post&lt;/a&gt;.  Since this lends itself to pretty pictures, it&amp;rsquo;s the next thing I thought I would tackle.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
