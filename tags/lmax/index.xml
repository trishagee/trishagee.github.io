<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lmax on Trisha Gee</title>
    <link>https://trishagee.github.io/tags/lmax/</link>
    <description>Recent content in lmax on Trisha Gee</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 11 Mar 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://trishagee.github.io/tags/lmax/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Coalescing Ring Buffer</title>
      <link>https://trishagee.github.io/post/the_coalescing_ring_buffer/</link>
      <pubDate>Mon, 11 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/the_coalescing_ring_buffer/</guid>
      <description>For anyone who is interested in what LMAX is up to, and is still following my blog, have a look at this post about the latest tool they&amp;rsquo;ve open sourced: the Coalescing Ring Buffer.</description>
    </item>
    
    <item>
      <title>Agile&#43;&#43;: When Agile Goes Well</title>
      <link>https://trishagee.github.io/post/agile_when_agile_goes_well/</link>
      <pubDate>Wed, 12 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/agile_when_agile_goes_well/</guid>
      <description>&lt;p&gt;If you see anything about &lt;a href=&#34;http://www.lmax.com/&#34;&gt;LMAX&lt;/a&gt; - the Disruptor, Continuous Delivery, or even the selection criteria for hiring developers, you&amp;rsquo;ll see that LMAX is pretty keen on &lt;a href=&#34;http://agilemanifesto.org/&#34;&gt;Agile&lt;/a&gt;. However, no-one&amp;rsquo;s documented the Agile process there, as far as I know. Although I personally had it on my todo list, I never had the motivation, the hook to do it. And I realised eventually that&amp;rsquo;s because I&amp;rsquo;m not sure it&amp;rsquo;s a process that would work very well for another team, in another company, working in another business.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Summary of Devoxx 2012</title>
      <link>https://trishagee.github.io/post/summary_of_devoxx_2012/</link>
      <pubDate>Thu, 22 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/summary_of_devoxx_2012/</guid>
      <description>&lt;iframe src=&#34;https://player.vimeo.com/video/53695846&#34; width=&#34;640&#34; height=&#34;360&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; fullscreen&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&#34;https://vimeo.com/53695846&#34;&gt;Devoxx 2012&lt;/a&gt; from &lt;a href=&#34;https://vimeo.com/royvanrijn&#34;&gt;Roy van Rijn&lt;/a&gt; on &lt;a href=&#34;https://vimeo.com&#34;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Devoxx topped off a crazy two months of conferences.  I&amp;rsquo;ve heard people talk about the conference season in the past, and been slightly (OK, very) jealous of all that jet-setting.  I&amp;rsquo;ll admit, however, to a slight feeling of relief that my focus until Christmas is pretty much going to be coding.  I hope.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>QCon London 2012</title>
      <link>https://trishagee.github.io/post/qcon_london_2012/</link>
      <pubDate>Tue, 27 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/qcon_london_2012/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m late with my write-up of &lt;a href=&#34;http://qconlondon.com/london-2012/&#34;&gt;QCon&lt;/a&gt;, and what&amp;rsquo;s worse, it will be partial - &amp;ldquo;sadly&amp;rdquo; I was in Lanzarote on a training week with the running club from the Thursday (8th) so I missed most of it. A sacrifice I had to make for 7 days in the sunshine&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to make your CV Not Suck</title>
      <link>https://trishagee.github.io/post/how_to_make_your_cv_not_suck/</link>
      <pubDate>Wed, 21 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/how_to_make_your_cv_not_suck/</guid>
      <description>&lt;p&gt;When you&amp;rsquo;re applying for a job at &lt;a href=&#34;http://www.lmax.com/&#34;&gt;LMAX&lt;/a&gt;, your CV (or résumé, for our American readers) usually comes through me and I decide whether to call you for a technical phone screen.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m going to let you into a secret.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A NYSE Product Manager and an LMAX Developer walk into a low latency trading seminar...</title>
      <link>https://trishagee.github.io/post/a_nyse_product_manager_and_an_lmax_developer_walk_into_a_low_latency_trading_seminar/</link>
      <pubDate>Wed, 09 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/a_nyse_product_manager_and_an_lmax_developer_walk_into_a_low_latency_trading_seminar/</guid>
      <description>&amp;ldquo;What&amp;hellip; exactly&amp;hellip; were you guys looking to get out of today&amp;rsquo;s event? Because&amp;hellip;&amp;rdquo;
&amp;ldquo;Because we&amp;rsquo;re girls?&amp;rdquo;
&amp;ldquo;Um&amp;hellip; yes&amp;hellip;&amp;rdquo;
Kim impetuously opts for The Truth: &amp;ldquo;We&amp;rsquo;re here to meet men.&amp;rdquo;
Our interrogator looks round dubiously.
&amp;ldquo;No, really, why are you here?&amp;rdquo;
Phew. My reputation is intact1
Kim eloquently describes what her situation is as Product Manager and the criteria she&amp;rsquo;s measuring third party products against. I explain how LMAX aims to be the fastest retail exchange in the world, and therefore low latency is a tiny bit important to us.</description>
    </item>
    
    <item>
      <title>JavaOne: Initial Observations</title>
      <link>https://trishagee.github.io/post/javaone_initial_observations/</link>
      <pubDate>Tue, 04 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/javaone_initial_observations/</guid>
      <description>&lt;p&gt;&lt;em&gt;Here&amp;rsquo;s a photo of me representing &lt;a href=&#34;http://www.lmaxtrader.co.uk/&#34;&gt;LMAX&lt;/a&gt; as I pick up the &lt;a href=&#34;http://java.com/en/dukeschoice/index.jsp&#34;&gt;Duke Award&lt;/a&gt; we won for the &lt;a href=&#34;https://lmax-exchange.github.io/disruptor/&#34;&gt;Disruptor&lt;/a&gt; (Thanks to &lt;a href=&#34;http://martijnverburg.blogspot.com/&#34;&gt;Martijn&lt;/a&gt; for taking the photo)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So I&amp;rsquo;ve been at JavaOne for the better part of three days, it&amp;rsquo;s time to record some of my observations so far:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JavaOne 2011</title>
      <link>https://trishagee.github.io/post/javaone_2011/</link>
      <pubDate>Tue, 27 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/javaone_2011/</guid>
      <description>So, I&amp;rsquo;m off to JavaOne next week!
This is an unexpected and very pleasant surprise. I&amp;rsquo;ll be there with Martin (of the Disruptor fame), and Martijn (that&amp;rsquo;s not going to get confusing at all). Martin will be talking about the Disruptor on Thursday, and Martijn is busy talking about&amp;hellip; everything. Most importantly for the LJC he&amp;rsquo;s representing us in our shiny new JCP Executive Committee role.
I&amp;rsquo;m really looking forward to meeting pretty much anyone and everyone who&amp;rsquo;ll talk to me.</description>
    </item>
    
    <item>
      <title>Dissecting the Disruptor: Demystifying Memory Barriers</title>
      <link>https://trishagee.github.io/post/dissecting_the_disruptor_demystifying_memory_barriers/</link>
      <pubDate>Sun, 07 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/dissecting_the_disruptor_demystifying_memory_barriers/</guid>
      <description>&lt;p&gt;My recent slow-down in posting is because I&amp;rsquo;ve been trying to write a post explaining &lt;a href=&#34;http://en.wikipedia.org/wiki/Memory_barrier&#34;&gt;memory barriers&lt;/a&gt; and their applicability in &lt;a href=&#34;http://code.google.com/p/disruptor&#34;&gt;the Disruptor&lt;/a&gt;.  The problem is, no matter how much I read and no matter how many times I ask the ever-patient &lt;a href=&#34;http://mechanical-sympathy.blogspot.com/&#34;&gt;Martin&lt;/a&gt; and &lt;a href=&#34;http://mikes-tech.blogspot.com/&#34;&gt;Mike&lt;/a&gt; questions trying to clarify some point, I just don&amp;rsquo;t intuitively grasp the subject.  I guess I don&amp;rsquo;t have the deep background knowledge required to fully understand.&lt;/p&gt;
&lt;p&gt;So, rather than make an idiot of myself trying to explain something I don&amp;rsquo;t really get, I&amp;rsquo;m going to try and cover, at an abstract / massive-simplification level, what I do understand in the area.  Martin has written a post &lt;a href=&#34;http://mechanical-sympathy.blogspot.com/2011/07/memory-barriersfences.html&#34;&gt;going into memory barriers&lt;/a&gt; in some detail, so hopefully I can get away with skimming the subject.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dissecting the Disruptor: Why it&#39;s so fast (part two) - Magic cache line padding</title>
      <link>https://trishagee.github.io/post/dissecting_the_disruptor_why_its_so_fast_part_two__magic_cache_line_padding/</link>
      <pubDate>Fri, 22 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/dissecting_the_disruptor_why_its_so_fast_part_two__magic_cache_line_padding/</guid>
      <description>&lt;p&gt;We mention the phrase Mechanical Sympathy quite a lot, in fact it&amp;rsquo;s even &lt;a href=&#34;http://mechanical-sympathy.blogspot.com/&#34;&gt;Martin&amp;rsquo;s blog title&lt;/a&gt;.  It&amp;rsquo;s about understanding how the underlying hardware operates and programming in a way that works with that, not against it.&lt;/p&gt;
&lt;p&gt;We get a number of comments and questions about the mysterious cache line padding in the &lt;a href=&#34;https://github.com/LMAX-Exchange/disruptorsource/browse/trunk/code/src/main/com/lmax/disruptor/RingBuffer.java&#34;&gt;RingBuffer&lt;/a&gt;, and I referred to it in the &lt;a href=&#34;https://trishagee.com/2011/07/16/dissecting_the_disruptor_why_its_so_fast_part_one__locks_are_bad/&#34;&gt;last post&lt;/a&gt;.  Since this lends itself to pretty pictures, it&amp;rsquo;s the next thing I thought I would tackle.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dissecting the Disruptor: Why it&#39;s so fast (part one) - Locks Are Bad</title>
      <link>https://trishagee.github.io/post/dissecting_the_disruptor_why_its_so_fast_part_one__locks_are_bad/</link>
      <pubDate>Sat, 16 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/dissecting_the_disruptor_why_its_so_fast_part_one__locks_are_bad/</guid>
      <description>&lt;p&gt;Martin Fowler has written a &lt;a href=&#34;http://martinfowler.com/articles/lmax.html&#34;&gt;&lt;span id=&#34;goog_1736243820&#34;&gt;&lt;/span&gt;really good article&lt;span id=&#34;goog_1736243821&#34;&gt;&lt;/span&gt;&lt;/a&gt; describing not only &lt;a href=&#34;https://github.com/LMAX-Exchange/disruptor&#34;&gt;the Disruptor&lt;/a&gt;, but also how it fits into the architecture at &lt;a href=&#34;http://www.lmaxtrader.co.uk/&#34;&gt;LMAX&lt;/a&gt;.  This gives some of the context that has been missing so far, but the most frequently asked question is still &amp;ldquo;What is the Disruptor?&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m working up to answering that.  I&amp;rsquo;m currently on question number two: &amp;ldquo;Why is it so fast?&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dissecting the Disruptor: Wiring up the dependencies</title>
      <link>https://trishagee.github.io/post/dissecting_the_disruptor_wiring_up_the_dependencies/</link>
      <pubDate>Sun, 10 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/dissecting_the_disruptor_wiring_up_the_dependencies/</guid>
      <description>&lt;p&gt;So now I&amp;rsquo;ve covered the &lt;a href=&#34;https://trishagee.com/2011/06/22/dissecting_the_disruptor_whats_so_special_about_a_ring_buffer/&#34;&gt;ring buffer&lt;/a&gt; itself, &lt;a href=&#34;https://trishagee.com/2011/06/28/dissecting_the_disruptor_how_do_i_read_from_the_ring_buffer/&#34;&gt;reading&lt;/a&gt; from it and &lt;a href=&#34;https://trishagee.com/2011/07/04/dissecting_the_disruptor_writing_to_the_ring_buffer/&#34;&gt;writing&lt;/a&gt; to it.&lt;/p&gt;
&lt;p&gt;Logically the next thing to do is to wire everything up together.&lt;/p&gt;
&lt;p&gt;I talked about multiple producers - they have the producer barrier to keep them in order and under control. I&amp;rsquo;ve talked about consumers in a simple situation. Multiple consumers can get a little more involved. &lt;a href=&#34;http://www.lmaxtrader.co.uk/&#34;&gt;We&amp;rsquo;ve&lt;/a&gt; done some clever stuff to allow the consumers to be dependent on each other and the ring buffer. Like a lot of applications, we have a pipeline of things that need to happen before we can actually get on with the business logic - for example, we need to make sure the messages have been journalled to disk before we can do anything.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://lmax-exchange.github.io/disruptor/files/Disruptor-1.0.pdf&#34;&gt;Disruptor paper&lt;/a&gt; and the performance tests cover some basic configurations that you might want. I&amp;rsquo;m going to go over the most interesting one, mostly because I needed the practice with the graphics tablet.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dissecting the Disruptor: Writing to the ring buffer</title>
      <link>https://trishagee.github.io/post/dissecting_the_disruptor_writing_to_the_ring_buffer/</link>
      <pubDate>Mon, 04 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/dissecting_the_disruptor_writing_to_the_ring_buffer/</guid>
      <description>&lt;p&gt;This is the missing piece in the end-to-end view of the Disruptor. Brace yourselves, it&amp;rsquo;s quite long. But I decided to keep it in a single blog so you could have the context in one place.&lt;/p&gt;
&lt;p&gt;The important areas are: not wrapping the ring; informing the consumers; batching for producers; and how multiple producers work.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dissecting the Disruptor: How do I read from the ring buffer?</title>
      <link>https://trishagee.github.io/post/dissecting_the_disruptor_how_do_i_read_from_the_ring_buffer/</link>
      <pubDate>Tue, 28 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/dissecting_the_disruptor_how_do_i_read_from_the_ring_buffer/</guid>
      <description>&lt;p&gt;The next in the series of understanding &lt;a href=&#34;https://github.com/LMAX-Exchange/disruptor&#34;&gt;the Disruptor pattern&lt;/a&gt; developed at &lt;a href=&#34;http://www.lmaxtrader.com/&#34;&gt;LMAX&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After the &lt;a href=&#34;https://trishagee.com/2011/06/22/dissecting_the_disruptor_whats_so_special_about_a_ring_buffer/&#34;&gt;last post&lt;/a&gt; we all understand ring buffers and how awesome they are. Unfortunately for you, I have not said anything about how to actually populate them or read from them when you&amp;rsquo;re using the Disruptor.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dissecting the Disruptor: What&#39;s so special about a ring buffer?</title>
      <link>https://trishagee.github.io/post/dissecting_the_disruptor_whats_so_special_about_a_ring_buffer/</link>
      <pubDate>Wed, 22 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/dissecting_the_disruptor_whats_so_special_about_a_ring_buffer/</guid>
      <description>&lt;p&gt;Recently we open sourced the &lt;a href=&#34;https://github.com/LMAX-Exchange/disruptor&#34;&gt;LMAX Disruptor&lt;/a&gt;, the key to what makes our exchange so fast.  Why did we open source it?  Well, we&amp;rsquo;ve realised that conventional wisdom around high performance programming is&amp;hellip; a bit wrong. We&amp;rsquo;ve come up with a better, faster way to share data between threads, and it would be selfish not to share it with the world.  Plus it makes us look dead clever.&lt;/p&gt;
&lt;p&gt;On the site you can &lt;a href=&#34;https://lmax-exchange.github.io/disruptor/files/Disruptor-1.0.pdf&#34;&gt;download a technical article&lt;/a&gt; explaining what the Disruptor is and why it&amp;rsquo;s so clever and fast.  I even get a writing credit on it, which is gratifying when all I really did is insert commas and re-phrase sentences I didn&amp;rsquo;t understand.&lt;/p&gt;
&lt;p&gt;However, I find the whole thing a bit much to digest all at once, so I&amp;rsquo;m going to explain it in smaller pieces, as suits my &lt;a href=&#34;http://www.randsinrepose.com/archives/2003/07/10/nadd.html&#34;&gt;NADD&lt;/a&gt; audience.&lt;/p&gt;
&lt;p&gt;First up - the ring buffer.  Initially I was under the impression the Disruptor was just the ring buffer.  But I&amp;rsquo;ve come to realise that while this data structure is at the heart of the pattern, the clever bit about the Disruptor is controlling access to it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>STAC London Summit</title>
      <link>https://trishagee.github.io/post/stac_london_summit/</link>
      <pubDate>Sun, 12 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/stac_london_summit/</guid>
      <description>&lt;p&gt;On Wednesday I tagged along to the &lt;a href=&#34;http://www.stacresearch.com/node/8970&#34;&gt;STAC London Summit&lt;/a&gt; to provide backup for &lt;a href=&#34;http://mikes-tech.blogspot.com/&#34;&gt;Mike&lt;/a&gt;, who was on the &amp;ldquo;The Future of Messaging Middleware&amp;rdquo; panel.&lt;/p&gt;
&lt;p&gt;The panel consisted of two messaging providers, one hardware (Solace Systems) and one software (29West/Informatica), and two &amp;ldquo;users&amp;rdquo;, Citihub and &lt;a href=&#34;http://community.lmaxtrader.com/&#34;&gt;LMAX&lt;/a&gt;. Obviously both providers were arguing that theirs was the best solution. But what I found interesting is that I came away with the impression that everyone was really on the same side - everyone wants to use or to provide the best system, but there are different approaches. Which one you adopt is likely to be influenced by how your team work and the hardware you have (or can obtain).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Getting around a bit</title>
      <link>https://trishagee.github.io/post/getting_around_a_bit/</link>
      <pubDate>Mon, 23 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/getting_around_a_bit/</guid>
      <description>I&amp;rsquo;m honoured to now be listed on three aggregated blog feeds:
 The new and somewhat embryonic blogs.lmax.com. The London Java Community Aggrity. ThoughtWorks Alumni, along with a whole host of distinguished names.  The pressure&amp;rsquo;s on to try and write useful stuff. Oh OK, I&amp;rsquo;ll settle for &amp;ldquo;entertaining&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Why Java developers hate .NET</title>
      <link>https://trishagee.github.io/post/why_java_developers_hate_net/</link>
      <pubDate>Fri, 20 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/why_java_developers_hate_net/</guid>
      <description>&lt;p&gt;I have been struggling with .NET. Actually, I have been fighting pitched battles with it.&lt;/p&gt;
&lt;p&gt;All I want to do is take our existing Java client example code and write an equivalent in C#. Easy, right?&lt;/p&gt;
&lt;h2 id=&#34;trishas-guide-to-converting-java-to-c&#34;&gt;Trisha&amp;rsquo;s Guide to Converting Java to C#&lt;/h2&gt;
&lt;p&gt;Turns out writing the actual C# is relatively straightforward. Putting to one side the question of writing optimal code (these are very basic samples after all), to get the examples to compile and run was a simple process:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TradeTech 2011 - Not like a developer conference</title>
      <link>https://trishagee.github.io/post/tradetech_2011__not_like_a_developer_conference/</link>
      <pubDate>Mon, 18 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/tradetech_2011__not_like_a_developer_conference/</guid>
      <description>&lt;p&gt;I attended TradeTech last week, an annual event about Equities and Derivatives trading. I assumed from the title that there would be a reasonable focus on technology, but I found it was more “Trade” and less “Tech”.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://2.bp.blogspot.com/-bWCpxKcxqUo/TahF0DBHxII/AAAAAAAAIAc/XXZzeNj_4K0/s1600/DSC_0009.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GWT: Why VerticalPanel is Evil</title>
      <link>https://trishagee.github.io/post/gwt_why_verticalpanel_is_evil/</link>
      <pubDate>Fri, 21 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/gwt_why_verticalpanel_is_evil/</guid>
      <description>At LMAX we adopted Google Web Toolkit pretty early on. One of the motivations for using it was so we only had to worry about recruiting Java guys, and then we could all work on every part of the application including the web UI. Sure, you can learn a bunch of different skills if you want to, but it reduced context-switching and kept the skill set we were hiring for to a nice short list.</description>
    </item>
    
    <item>
      <title>Live at Last</title>
      <link>https://trishagee.github.io/post/live_at_last/</link>
      <pubDate>Sun, 31 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>https://trishagee.github.io/post/live_at_last/</guid>
      <description>We went live with &amp;lsquo;real&amp;rsquo; customers this week just gone. It&amp;rsquo;s the culmination of nearly two years work for me personally, and three years for our company.
It&amp;rsquo;s really nice to be live at last, and to have our name out there. It might (in fact, should) change the focus of our work. Without paying customers it&amp;rsquo;s much more difficult to prioritise work based on what they might need or want.</description>
    </item>
    
  </channel>
</rss>
